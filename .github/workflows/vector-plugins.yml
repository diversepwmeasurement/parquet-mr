jobs:
  build:
    name: Build Parquet with JDK ${{ matrix.java }} and ${{ matrix.codes }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@master
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      env:
        CI_TARGET_BRANCH: $GITHUB_HEAD_REF
      name: before_install
      run: 'bash dev/ci-before_install.sh

        '
    - continue-on-error: true
      name: install
      run: 'EXTRA_JAVA_TEST_ARGS=$(mvn help:evaluate -Dexpression=extraJavaTestArgs
        -q -DforceStdout)

        export MAVEN_OPTS="$MAVEN_OPTS $EXTRA_JAVA_TEST_ARGS"

        mvn install --batch-mode -Pvector-plugins -DskipTests=true -Dmaven.javadoc.skip=true
        -Dsource.skip=true -Djava.version=${{ matrix.java }} -pl parquet-plugins/parquet-encoding-vector,parquet-plugins/parquet-plugins-benchmarks
        -am

        '
    - continue-on-error: true
      env:
        JAVA_VERSION: ${{ matrix.java }}
        TEST_CODECS: ${{ matrix.codes }}
      name: verify
      run: 'EXTRA_JAVA_TEST_ARGS=$(mvn help:evaluate -Dexpression=extraJavaTestArgs
        -q -DforceStdout)

        export MAVEN_OPTS="$MAVEN_OPTS $EXTRA_JAVA_TEST_ARGS"

        mvn verify --batch-mode -Pvector-plugins javadoc:javadoc -pl parquet-plugins/parquet-encoding-vector,parquet-plugins/parquet-plugins-benchmarks
        -am

        '
    strategy:
      fail-fast: false
      matrix:
        codes:
        - uncompressed
        java:
        - '17'
name: Vector-plugins
on:
  repository_dispatch:
    types: trigger-ga___vector-plugins.yml
